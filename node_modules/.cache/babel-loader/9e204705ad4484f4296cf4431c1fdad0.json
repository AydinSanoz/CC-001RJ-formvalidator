{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/catalina/Desktop/repositories/CC-001RJ-formvalidator/src/pages/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, Button, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\nexport const SignUp = () => {\n  _s();\n\n  const useStyles = makeStyles({\n    buttonStyle: {//\n    }\n  });\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      autoComplete: \"on\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"email\",\n          label: \"email\",\n          variant: \"filled\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          helperText: errors.email && touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          label: \"password\",\n          variant: \"filled\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          helperText: errors.password && touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: styles.buttonStyle,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: styles.buttonStyle,\n          variant: \"contained\",\n          children: \"SignIn with google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SignUp, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", true);\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/catalina/Desktop/repositories/CC-001RJ-formvalidator/src/pages/SignUp.js"],"names":["React","TextField","Button","Container","Typography","makeStyles","Formik","SignUp","useStyles","buttonStyle","styles","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField, Button, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\n\n\n\nexport const SignUp = () => {\n    const useStyles = makeStyles({\n        buttonStyle: {\n            //\n        },\n    });\n\t\n    const styles = useStyles();\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\tvalidate={(values) => {\n\t\t\t\tconst errors = {};\n\t\t\t\tif (!values.email) {\n\t\t\t\t\terrors.email = 'Required';\n\t\t\t\t} else if (\n\t\t\t\t\t!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n\t\t\t\t\t\tvalues.email\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\terrors.email = 'Invalid email address';\n\t\t\t\t}\n\t\t\t\treturn errors;\n\t\t\t}}\n\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\talert(JSON.stringify(values, null, 2));\n\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t}, 400);\n\t\t\t}}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\terrors,\n\t\t\t\ttouched,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\thandleSubmit,\n\t\t\t\tisSubmitting,\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\n\t\t\t\t\tnoValidate\n\t\t\t\t\tautoComplete='on'\n\t\t\t\t>\n\t\t\t\t\t<Container maxWidth='sm'>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\terrors.email && touched.email && errors.email\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\terrors.password &&\n\t\t\t\t\t\t\t\ttouched.password &&\n\t\t\t\t\t\t\t\terrors.password\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tstyle={styles.buttonStyle}\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button style={styles.buttonStyle} variant='contained'>\n\t\t\t\t\t\t\tSignIn with google\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Container>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}