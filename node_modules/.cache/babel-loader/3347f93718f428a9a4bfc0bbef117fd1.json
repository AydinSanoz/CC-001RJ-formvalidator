{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/catalina/Desktop/repositories/CC-001RJ-formvalidator/src/pages/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, Button, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\nexport const SignUp = () => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: '#cfe8fc',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"on\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            label: \"email\",\n            variant: \"filled\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            helperText: errors.email && touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            label: \"password\",\n            variant: \"filled\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            helperText: errors.password && touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            children: \"SignIn with google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SignUp, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/catalina/Desktop/repositories/CC-001RJ-formvalidator/src/pages/SignUp.js"],"names":["React","TextField","Button","Container","Typography","makeStyles","Formik","useStyles","theme","root","margin","spacing","width","SignUp","classes","backgroundColor","height","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","display","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField, Button, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Formik } from 'formik';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& .MuiTextField-root': {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: 200,\n\t\t},\n\t},\n}));\n\nexport const SignUp = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Typography\n\t\t\tcomponent='div'\n\t\t\tstyle={{ backgroundColor: '#cfe8fc', height: '100vh' }}\n\t\t>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\t\tvalidate={(values) => {\n\t\t\t\t\tconst errors = {};\n\t\t\t\t\tif (!values.email) {\n\t\t\t\t\t\terrors.email = 'Required';\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n\t\t\t\t\t\t\tvalues.email\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\terrors.email = 'Invalid email address';\n\t\t\t\t\t}\n\t\t\t\t\treturn errors;\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\talert(JSON.stringify(values, null, 2));\n\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t}, 400);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t}) => (\n\t\t\t\t\t<form\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\tclassName={classes.root}\n\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\tautoComplete='on'\n\t\t\t\t\t>\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\tmaxWidth='sm'\n\t\t\t\t\t\t\tstyle={{ display: 'flex', flexDirection: 'column' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\terrors.email &&\n\t\t\t\t\t\t\t\t\t\ttouched.email &&\n\t\t\t\t\t\t\t\t\t\terrors.email\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\terrors.password &&\n\t\t\t\t\t\t\t\t\t\ttouched.password &&\n\t\t\t\t\t\t\t\t\t\terrors.password\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Button type='submit' variant='contained'>\n\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant='contained'>\n\t\t\t\t\t\t\t\t\tSignIn with google\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Typography>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}